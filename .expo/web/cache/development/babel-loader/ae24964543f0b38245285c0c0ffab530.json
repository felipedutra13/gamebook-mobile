{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Documents\\\\CCP\\\\Projects\\\\TracknPlay\\\\mobile\\\\App.tsx\";\nimport React from 'react';\nimport AppLoading from 'expo-app-loading';\nimport Routes from \"./src/routes\";\nimport { useFonts, Roboto_400Regular } from '@expo-google-fonts/roboto';\nimport { manuallyResetPromiseCounter } from 'react-promise-tracker';\nimport { useBackHandler } from '@react-native-community/hooks';\nexport default function App() {\n  useBackHandler(function () {\n    manuallyResetPromiseCounter();\n    return false;\n  });\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"names":["React","AppLoading","Routes","useFonts","Roboto_400Regular","manuallyResetPromiseCounter","useBackHandler","App","fontsLoaded"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport AppLoading from 'expo-app-loading';\r\nimport Routes from './src/routes';\r\nimport { useFonts, Roboto_400Regular } from '@expo-google-fonts/roboto';\r\nimport { manuallyResetPromiseCounter } from 'react-promise-tracker';\r\nimport { useBackHandler } from '@react-native-community/hooks'\r\n\r\nexport default function App() {\r\n    useBackHandler(() => {\r\n        manuallyResetPromiseCounter();\r\n        return false;\r\n    })\r\n\r\n    const [fontsLoaded] = useFonts({\r\n        Roboto_400Regular\r\n    });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n    return (\r\n        <Routes />\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,2BAA5C;AACA,SAASC,2BAAT,QAA4C,uBAA5C;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,eAAe,SAASC,GAAT,GAAe;EAC1BD,cAAc,CAAC,YAAM;IACjBD,2BAA2B;IAC3B,OAAO,KAAP;EACH,CAHa,CAAd;;EAKA,gBAAsBF,QAAQ,CAAC;IAC3BC,iBAAiB,EAAjBA;EAD2B,CAAD,CAA9B;EAAA;EAAA,IAAOI,WAAP;;EAIA,IAAI,CAACA,WAAL,EAAkB;IACd,OAAO,oBAAC,UAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACH;;EAED,OACI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAGH"},"metadata":{},"sourceType":"module"}