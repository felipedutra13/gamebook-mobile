{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Documents\\\\CCP\\\\Projects\\\\TracknPlay\\\\mobile\\\\node_modules\\\\react-native-password-strength-meter\\\\src\\\\components\\\\text-password-strength-display.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport scorePassword from \"../utils/score-password\";\nimport calculateLevel from \"../utils/calculate-level\";\nimport style from \"../style\";\nimport { TEXT_PASSWORD_STRENGTH_DISPLAY } from \"../constants\";\n\nfunction TextPasswordStrengthDisplay(_ref) {\n  var password = _ref.password,\n      touched = _ref.touched,\n      scoreLimit = _ref.scoreLimit,\n      variations = _ref.variations,\n      minLength = _ref.minLength,\n      labelVisible = _ref.labelVisible,\n      levels = _ref.levels,\n      wrapperStyle = _ref.wrapperStyle,\n      labelStyle = _ref.labelStyle;\n  var score = scorePassword(password, minLength, scoreLimit, variations);\n\n  var _calculateLevel = calculateLevel(score, levels),\n      label = _calculateLevel.label,\n      labelColor = _calculateLevel.labelColor;\n\n  return React.createElement(View, {\n    style: [style.wrapper, wrapperStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, labelVisible && (touched || score !== 0) ? React.createElement(Text, {\n    style: [style.label, labelStyle, {\n      color: labelColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, label) : null);\n}\n\nTextPasswordStrengthDisplay.defaultProps = TEXT_PASSWORD_STRENGTH_DISPLAY;\nTextPasswordStrengthDisplay.propTypes = {\n  password: PropTypes.string.isRequired,\n  touched: PropTypes.bool,\n  scoreLimit: PropTypes.number,\n  variations: PropTypes.object,\n  minLength: PropTypes.number,\n  labelVisible: PropTypes.bool,\n  levels: PropTypes.array,\n  wrapperStyle: PropTypes.object,\n  labelStyle: PropTypes.object\n};\nexport default TextPasswordStrengthDisplay;","map":{"version":3,"names":["React","PropTypes","scorePassword","calculateLevel","style","TEXT_PASSWORD_STRENGTH_DISPLAY","TextPasswordStrengthDisplay","password","touched","scoreLimit","variations","minLength","labelVisible","levels","wrapperStyle","labelStyle","score","label","labelColor","wrapper","color","defaultProps","propTypes","string","isRequired","bool","number","object","array"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/node_modules/react-native-password-strength-meter/src/components/text-password-strength-display.js"],"sourcesContent":["/* eslint import/no-unresolved: [2, { ignore: ['react-native', 'react'] }] */\nimport React from 'react';\nimport {\n  View, Text,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\n// Components\nimport scorePassword from '../utils/score-password';\nimport calculateLevel from '../utils/calculate-level';\n\n// Style\nimport style from '../style';\nimport { TEXT_PASSWORD_STRENGTH_DISPLAY } from '../constants';\n\nfunction TextPasswordStrengthDisplay({\n  password,\n  touched,\n  scoreLimit,\n  variations,\n  minLength,\n  labelVisible,\n  levels,\n  wrapperStyle,\n  labelStyle,\n}) {\n  const score = scorePassword(password, minLength, scoreLimit, variations);\n  const { label, labelColor } = calculateLevel(score, levels);\n  return (\n    <View style={[style.wrapper, wrapperStyle]}>\n      {labelVisible && (touched || score !== 0)\n        ? <Text style={[style.label, labelStyle, { color: labelColor }]}>{label}</Text>\n        : null\n      }\n    </View>\n  );\n}\n\nTextPasswordStrengthDisplay.defaultProps = TEXT_PASSWORD_STRENGTH_DISPLAY;\n\nTextPasswordStrengthDisplay.propTypes = {\n  password: PropTypes.string.isRequired,\n  touched: PropTypes.bool,\n  scoreLimit: PropTypes.number,\n  variations: PropTypes.object,\n  minLength: PropTypes.number,\n  labelVisible: PropTypes.bool,\n  levels: PropTypes.array,\n  wrapperStyle: PropTypes.object,\n  labelStyle: PropTypes.object,\n};\n\nexport default TextPasswordStrengthDisplay;\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAOC,aAAP;AACA,OAAOC,cAAP;AAGA,OAAOC,KAAP;AACA,SAASC,8BAAT;;AAEA,SAASC,2BAAT,OAUG;EAAA,IATDC,QASC,QATDA,QASC;EAAA,IARDC,OAQC,QARDA,OAQC;EAAA,IAPDC,UAOC,QAPDA,UAOC;EAAA,IANDC,UAMC,QANDA,UAMC;EAAA,IALDC,SAKC,QALDA,SAKC;EAAA,IAJDC,YAIC,QAJDA,YAIC;EAAA,IAHDC,MAGC,QAHDA,MAGC;EAAA,IAFDC,YAEC,QAFDA,YAEC;EAAA,IADDC,UACC,QADDA,UACC;EACD,IAAMC,KAAK,GAAGd,aAAa,CAACK,QAAD,EAAWI,SAAX,EAAsBF,UAAtB,EAAkCC,UAAlC,CAA3B;;EACA,sBAA8BP,cAAc,CAACa,KAAD,EAAQH,MAAR,CAA5C;EAAA,IAAQI,KAAR,mBAAQA,KAAR;EAAA,IAAeC,UAAf,mBAAeA,UAAf;;EACA,OACE,oBAAC,IAAD;IAAM,KAAK,EAAE,CAACd,KAAK,CAACe,OAAP,EAAgBL,YAAhB,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,YAAY,KAAKJ,OAAO,IAAIQ,KAAK,KAAK,CAA1B,CAAZ,GACG,oBAAC,IAAD;IAAM,KAAK,EAAE,CAACZ,KAAK,CAACa,KAAP,EAAcF,UAAd,EAA0B;MAAEK,KAAK,EAAEF;IAAT,CAA1B,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAgED,KAAhE,CADH,GAEG,IAHN,CADF;AAQD;;AAEDX,2BAA2B,CAACe,YAA5B,GAA2ChB,8BAA3C;AAEAC,2BAA2B,CAACgB,SAA5B,GAAwC;EACtCf,QAAQ,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADW;EAEtChB,OAAO,EAAEP,SAAS,CAACwB,IAFmB;EAGtChB,UAAU,EAAER,SAAS,CAACyB,MAHgB;EAItChB,UAAU,EAAET,SAAS,CAAC0B,MAJgB;EAKtChB,SAAS,EAAEV,SAAS,CAACyB,MALiB;EAMtCd,YAAY,EAAEX,SAAS,CAACwB,IANc;EAOtCZ,MAAM,EAAEZ,SAAS,CAAC2B,KAPoB;EAQtCd,YAAY,EAAEb,SAAS,CAAC0B,MARc;EAStCZ,UAAU,EAAEd,SAAS,CAAC0B;AATgB,CAAxC;AAYA,eAAerB,2BAAf"},"metadata":{},"sourceType":"module"}