{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar initialState = [];\n\nvar FilteredPlatformsReducer = function FilteredPlatformsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_PLATFORM\":\n      return [].concat(_toConsumableArray(state), [action.id]);\n\n    case \"REMOVE_PLATFORM\":\n      return state.filter(function (id) {\n        return id !== action.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default FilteredPlatformsReducer;","map":{"version":3,"names":["initialState","FilteredPlatformsReducer","state","action","type","id","filter"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/src/reducers/FilteredPlatformsReducer.ts"],"sourcesContent":["const initialState: number[] = [];\r\n\r\nconst FilteredPlatformsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case \"ADD_PLATFORM\":\r\n         return [...state, action.id];\r\n      case \"REMOVE_PLATFORM\":\r\n         return state.filter(id => id !== action.id);\r\n    //   case \"SET_PLATFORMS\":\r\n    //      return action.ids\r\n      default:\r\n         return state\r\n   }\r\n}\r\nexport default FilteredPlatformsReducer;"],"mappings":";AAAA,IAAMA,YAAsB,GAAG,EAA/B;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBF,YAAyB;EAAA,IAAXG,MAAW;;EAChE,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,cAAL;MACG,oCAAWF,KAAX,IAAkBC,MAAM,CAACE,EAAzB;;IACH,KAAK,iBAAL;MACG,OAAOH,KAAK,CAACI,MAAN,CAAa,UAAAD,EAAE;QAAA,OAAIA,EAAE,KAAKF,MAAM,CAACE,EAAlB;MAAA,CAAf,CAAP;;IAGH;MACG,OAAOH,KAAP;EARN;AAUF,CAXD;;AAYA,eAAeD,wBAAf"},"metadata":{},"sourceType":"module"}