{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Documents\\\\CCP\\\\Projects\\\\TracknPlay\\\\mobile\\\\node_modules\\\\react-native-confirmation-code-field\\\\esm\\\\CodeField.js\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { getStyle, getSymbols } from \"./utils\";\nimport { useFocusState } from \"./useFocusState\";\nimport { styles } from \"./CodeField.styles\";\nvar DEFAULT_CELL_COUNT = 4;\n\nfunction CodeFieldComponent(_ref, ref) {\n  var rootStyle = _ref.rootStyle,\n      textInputStyle = _ref.textInputStyle,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      value = _ref.value,\n      renderCell = _ref.renderCell,\n      _ref$cellCount = _ref.cellCount,\n      cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n      _ref$RootProps = _ref.RootProps,\n      RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n      _ref$RootComponent = _ref.RootComponent,\n      RootComponent = _ref$RootComponent === void 0 ? View : _ref$RootComponent,\n      rest = _objectWithoutProperties(_ref, [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"]);\n\n  var focusState = useFocusState(onBlur, onFocus);\n  var cells = getSymbols(value || '', cellCount).map(function (symbol, index, symbols) {\n    var isFirstEmptySymbol = symbols.indexOf('') === index;\n    return renderCell({\n      index: index,\n      symbol: symbol,\n      isFocused: focusState.isFocused && isFirstEmptySymbol\n    });\n  });\n  return React.createElement(RootComponent, _extends({}, RootProps, {\n    style: getStyle(styles.root, rootStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), cells, React.createElement(TextInput, _extends({\n    disableFullscreenUI: true,\n    caretHidden: true,\n    spellCheck: false,\n    autoCorrect: false,\n    blurOnSubmit: false,\n    clearButtonMode: \"never\",\n    autoCapitalize: \"characters\",\n    underlineColorAndroid: \"transparent\",\n    maxLength: cellCount\n  }, rest, {\n    value: value,\n    onBlur: focusState.onBlur,\n    onFocus: focusState.onFocus,\n    style: getStyle(styles.textInput, textInputStyle),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport var CodeField = React.forwardRef(CodeFieldComponent);","map":{"version":3,"names":["React","getStyle","getSymbols","useFocusState","styles","DEFAULT_CELL_COUNT","CodeFieldComponent","ref","rootStyle","textInputStyle","onBlur","onFocus","value","renderCell","cellCount","RootProps","RootComponent","View","rest","focusState","cells","map","symbol","index","symbols","isFirstEmptySymbol","indexOf","isFocused","root","textInput","CodeField","forwardRef"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/node_modules/react-native-confirmation-code-field/esm/CodeField.js"],"sourcesContent":["import {TextInput, View} from 'react-native';\nimport React from 'react';\nimport {getStyle, getSymbols} from './utils';\nimport {useFocusState} from './useFocusState';\nimport {styles} from './CodeField.styles';\nconst DEFAULT_CELL_COUNT = 4;\nfunction CodeFieldComponent(\n  {\n    rootStyle,\n    textInputStyle,\n    onBlur,\n    onFocus,\n    value,\n    renderCell,\n    cellCount = DEFAULT_CELL_COUNT,\n    RootProps = {},\n    RootComponent = View,\n    ...rest\n  },\n  ref,\n) {\n  const focusState = useFocusState(onBlur, onFocus);\n  const cells = getSymbols(value || '', cellCount).map(\n    (symbol, index, symbols) => {\n      const isFirstEmptySymbol = symbols.indexOf('') === index;\n      return renderCell({\n        index,\n        symbol,\n        isFocused: focusState.isFocused && isFirstEmptySymbol,\n      });\n    },\n  );\n  return (\n    <RootComponent {...RootProps} style={getStyle(styles.root, rootStyle)}>\n      {cells}\n      <TextInput\n        disableFullscreenUI\n        // Use `caretHidden={false}` when `value={''}` and user can't paste\\copy text because menu doesn't appear\n        // See more: https://github.com/retyui/react-native-confirmation-code-field/issues/140\n        caretHidden={true}\n        spellCheck={false}\n        autoCorrect={false}\n        blurOnSubmit={false}\n        clearButtonMode=\"never\"\n        autoCapitalize=\"characters\"\n        underlineColorAndroid=\"transparent\"\n        maxLength={cellCount}\n        {...rest}\n        value={value}\n        onBlur={focusState.onBlur}\n        onFocus={focusState.onFocus}\n        style={getStyle(styles.textInput, textInputStyle)}\n        ref={ref}\n      />\n    </RootComponent>\n  );\n}\nexport const CodeField = React.forwardRef(CodeFieldComponent);\n"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,UAAlB;AACA,SAAQC,aAAR;AACA,SAAQC,MAAR;AACA,IAAMC,kBAAkB,GAAG,CAA3B;;AACA,SAASC,kBAAT,OAaEC,GAbF,EAcE;EAAA,IAZEC,SAYF,QAZEA,SAYF;EAAA,IAXEC,cAWF,QAXEA,cAWF;EAAA,IAVEC,MAUF,QAVEA,MAUF;EAAA,IATEC,OASF,QATEA,OASF;EAAA,IAREC,KAQF,QAREA,KAQF;EAAA,IAPEC,UAOF,QAPEA,UAOF;EAAA,0BANEC,SAMF;EAAA,IANEA,SAMF,+BANcT,kBAMd;EAAA,0BALEU,SAKF;EAAA,IALEA,SAKF,+BALc,EAKd;EAAA,8BAJEC,aAIF;EAAA,IAJEA,aAIF,mCAJkBC,IAIlB;EAAA,IAHKC,IAGL;;EACA,IAAMC,UAAU,GAAGhB,aAAa,CAACO,MAAD,EAASC,OAAT,CAAhC;EACA,IAAMS,KAAK,GAAGlB,UAAU,CAACU,KAAK,IAAI,EAAV,EAAcE,SAAd,CAAV,CAAmCO,GAAnC,CACZ,UAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAA4B;IAC1B,IAAMC,kBAAkB,GAAGD,OAAO,CAACE,OAAR,CAAgB,EAAhB,MAAwBH,KAAnD;IACA,OAAOV,UAAU,CAAC;MAChBU,KAAK,EAALA,KADgB;MAEhBD,MAAM,EAANA,MAFgB;MAGhBK,SAAS,EAAER,UAAU,CAACQ,SAAX,IAAwBF;IAHnB,CAAD,CAAjB;EAKD,CARW,CAAd;EAUA,OACE,oBAAC,aAAD,eAAmBV,SAAnB;IAA8B,KAAK,EAAEd,QAAQ,CAACG,MAAM,CAACwB,IAAR,EAAcpB,SAAd,CAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACGY,KADH,EAEE,oBAAC,SAAD;IACE,mBAAmB,MADrB;IAIE,WAAW,EAAE,IAJf;IAKE,UAAU,EAAE,KALd;IAME,WAAW,EAAE,KANf;IAOE,YAAY,EAAE,KAPhB;IAQE,eAAe,EAAC,OARlB;IASE,cAAc,EAAC,YATjB;IAUE,qBAAqB,EAAC,aAVxB;IAWE,SAAS,EAAEN;EAXb,GAYMI,IAZN;IAaE,KAAK,EAAEN,KAbT;IAcE,MAAM,EAAEO,UAAU,CAACT,MAdrB;IAeE,OAAO,EAAES,UAAU,CAACR,OAftB;IAgBE,KAAK,EAAEV,QAAQ,CAACG,MAAM,CAACyB,SAAR,EAAmBpB,cAAnB,CAhBjB;IAiBE,GAAG,EAAEF,GAjBP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAFF,CADF;AAwBD;;AACD,OAAO,IAAMuB,SAAS,GAAG9B,KAAK,CAAC+B,UAAN,CAAiBzB,kBAAjB,CAAlB"},"metadata":{},"sourceType":"module"}