{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Documents\\\\CCP\\\\Projects\\\\TracknPlay\\\\mobile\\\\src\\\\pages\\\\FillCode\\\\index.tsx\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from \"../../services/api\";\nimport { useNavigation } from '@react-navigation/native';\nimport Loading from \"../../components/Loading\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { showMessage } from 'react-native-flash-message';\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\n\nvar FillCode = function FillCode(route) {\n  var _route$route, _route$route$params, _route$route2, _route$route2$params;\n\n  var option = route == null ? void 0 : (_route$route = route.route) == null ? void 0 : (_route$route$params = _route$route.params) == null ? void 0 : _route$route$params.option;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      textVisible = _useState2[0],\n      setTextVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showLoading = _useState4[0],\n      setShowLoading = _useState4[1];\n\n  var navigation = useNavigation();\n  var email = route == null ? void 0 : (_route$route2 = route.route) == null ? void 0 : (_route$route2$params = _route$route2.params) == null ? void 0 : _route$route2$params.email;\n  var Value = Animated.Value,\n      AnimatedText = Animated.Text;\n  var CELL_COUNT = 4;\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: CELL_COUNT\n  });\n\n  var _useClearByFocusCell = useClearByFocusCell({\n    value: value,\n    setValue: setValue\n  }),\n      _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n      props = _useClearByFocusCell2[0],\n      getCellOnLayoutHandler = _useClearByFocusCell2[1];\n\n  function sendEmail() {\n    setTextVisible(false);\n    setShowLoading(true);\n\n    if (option == 'passwordReset') {\n      trackPromise(api.post(\"/verifyCode\", {\n        email: email,\n        token: value\n      }).then(function (response) {\n        setTextVisible(true);\n        setShowLoading(false);\n        navigation.navigate('ResetPassword', {\n          email: email\n        });\n      }).catch(function (err) {\n        showMessage({\n          message: err.response.data.message,\n          type: \"danger\"\n        });\n        setTextVisible(true);\n        setShowLoading(false);\n      }));\n    } else {\n      trackPromise(api.post(\"/confirmAccount\", {\n        email: email,\n        token: value\n      }).then(function (response) {\n        setTextVisible(true);\n        setShowLoading(false);\n        showMessage({\n          message: \"Conta confirmada com sucesso, realize login para continuar!\",\n          type: \"success\"\n        });\n        navigation.navigate('Login');\n      }).catch(function (err) {\n        showMessage({\n          message: err.response.data.message,\n          type: \"danger\"\n        });\n        setTextVisible(true);\n        setShowLoading(false);\n      }));\n    }\n  }\n\n  var animationsColor = _toConsumableArray(new Array(CELL_COUNT)).map(function () {\n    return new Value(0);\n  });\n\n  var animationsScale = _toConsumableArray(new Array(CELL_COUNT)).map(function () {\n    return new Value(1);\n  });\n\n  var animateCell = function animateCell(_ref) {\n    var hasValue = _ref.hasValue,\n        index = _ref.index,\n        isFocused = _ref.isFocused;\n    Animated.parallel([Animated.timing(animationsColor[index], {\n      useNativeDriver: false,\n      toValue: isFocused ? 1 : 0,\n      duration: 250\n    }), Animated.spring(animationsScale[index], {\n      useNativeDriver: false,\n      toValue: hasValue ? 0 : 1\n    })]).start();\n  };\n\n  var renderCell = function renderCell(_ref2) {\n    var index = _ref2.index,\n        symbol = _ref2.symbol,\n        isFocused = _ref2.isFocused;\n    var hasValue = Boolean(symbol);\n    var animatedCellStyle = {\n      backgroundColor: hasValue ? animationsScale[index].interpolate({\n        inputRange: [0, 1],\n        outputRange: [NOT_EMPTY_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR]\n      }) : animationsColor[index].interpolate({\n        inputRange: [0, 1],\n        outputRange: [DEFAULT_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR]\n      }),\n      borderRadius: animationsScale[index].interpolate({\n        inputRange: [0, 1],\n        outputRange: [CELL_SIZE, CELL_BORDER_RADIUS]\n      }),\n      transform: [{\n        scale: animationsScale[index].interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }]\n    };\n    return React.createElement(AnimatedText, {\n      key: index,\n      style: [styles.cell, animatedCellStyle],\n      onLayout: getCellOnLayoutHandler(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, symbol || (isFocused ? React.createElement(Cursor, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }) : null));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    color: \"#FFF\",\n    size: 24,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Gamebook\")), React.createElement(View, {\n    style: styles.resetContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, option == 'passwordReset' ? 'Esqueci minha senha' : 'Confirmar c√≥digo'), React.createElement(Text, {\n    style: styles.textDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"Insira o c\\xF3digo enviado para \", email, \".\")), React.createElement(CodeField, _extends({\n    ref: ref\n  }, props, {\n    value: value,\n    onChangeText: setValue,\n    cellCount: CELL_COUNT,\n    rootStyle: styles.codeFiledRoot,\n    keyboardType: \"number-pad\",\n    textContentType: \"oneTimeCode\",\n    renderCell: renderCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })), React.createElement(Pressable, {\n    onPress: sendEmail,\n    style: styles.sendButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, showLoading && React.createElement(Loading, {\n    login: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }), textVisible && React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }, \"Continuar\")))));\n};\n\nexport default FillCode;\nexport var CELL_SIZE = 55;\nexport var CELL_BORDER_RADIUS = 8;\nexport var DEFAULT_CELL_BG_COLOR = '#fff';\nexport var NOT_EMPTY_CELL_BG_COLOR = '#3557b7';\nexport var ACTIVE_CELL_BG_COLOR = '#f7fafe';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  header: {\n    zIndex: 0.5,\n    position: 'absolute',\n    flexDirection: 'row',\n    top: 45,\n    left: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '85%',\n    marginLeft: 0\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 20,\n    left: 10,\n    width: \"80%\"\n  },\n  resetContainer: {\n    top: 200\n  },\n  emailInput: {\n    left: 40,\n    top: 100,\n    borderRadius: 8,\n    width: \"80%\",\n    height: 50,\n    color: \"#cecece\",\n    backgroundColor: \"#fff\",\n    fontSize: 16,\n    paddingLeft: 10\n  },\n  textContainer: {\n    width: \"90%\",\n    left: 25\n  },\n  textTitle: {\n    textAlign: \"justify\",\n    color: \"#fff\",\n    fontSize: 22,\n    fontWeight: 'bold'\n  },\n  textDescription: {\n    textAlign: \"justify\",\n    color: \"#A9A9A9\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  sendButton: {\n    borderRadius: 8,\n    width: 190,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: 15,\n    elevation: 2,\n    backgroundColor: \"#fff\",\n    top: 150,\n    height: 30\n  },\n  textStyle: {\n    color: \"#000\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 16\n  },\n  codeFiledRoot: {\n    height: CELL_SIZE,\n    marginTop: 30,\n    paddingHorizontal: 20,\n    justifyContent: 'center'\n  },\n  cell: {\n    marginHorizontal: 8,\n    height: CELL_SIZE,\n    width: CELL_SIZE,\n    lineHeight: CELL_SIZE - 5,\n    fontSize: 30,\n    textAlign: 'center',\n    borderRadius: CELL_BORDER_RADIUS,\n    color: '#C71414',\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  },\n  root: {\n    minHeight: 800,\n    padding: 20\n  },\n  icon: {\n    width: 217 / 2.4,\n    height: 158 / 2.4,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  subTitle: {\n    paddingTop: 30,\n    color: '#000',\n    textAlign: 'center'\n  },\n  nextButton: {\n    marginTop: 30,\n    borderRadius: 60,\n    height: 60,\n    backgroundColor: '#3557b7',\n    justifyContent: 'center',\n    minWidth: 300,\n    marginBottom: 100\n  },\n  nextButtonText: {\n    textAlign: 'center',\n    fontSize: 20,\n    color: '#fff',\n    fontWeight: '700'\n  }\n});","map":{"version":3,"names":["React","useState","Feather","Icon","api","useNavigation","Loading","trackPromise","showMessage","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","FillCode","route","option","params","textVisible","setTextVisible","showLoading","setShowLoading","navigation","email","Value","Animated","AnimatedText","Text","CELL_COUNT","value","setValue","ref","cellCount","props","getCellOnLayoutHandler","sendEmail","post","token","then","response","navigate","catch","err","message","data","type","animationsColor","Array","map","animationsScale","animateCell","hasValue","index","isFocused","parallel","timing","useNativeDriver","toValue","duration","spring","start","renderCell","symbol","Boolean","animatedCellStyle","backgroundColor","interpolate","inputRange","outputRange","NOT_EMPTY_CELL_BG_COLOR","ACTIVE_CELL_BG_COLOR","DEFAULT_CELL_BG_COLOR","borderRadius","CELL_SIZE","CELL_BORDER_RADIUS","transform","scale","styles","cell","container","header","goBack","title","resetContainer","textContainer","textTitle","textDescription","codeFiledRoot","sendButton","textStyle","StyleSheet","create","flex","zIndex","position","flexDirection","top","left","alignItems","justifyContent","width","marginLeft","color","fontSize","emailInput","height","paddingLeft","textAlign","fontWeight","marginRight","padding","elevation","marginTop","paddingHorizontal","marginHorizontal","lineHeight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","root","minHeight","icon","subTitle","paddingTop","nextButton","minWidth","marginBottom","nextButtonText"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/src/pages/FillCode/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, SafeAreaView, ScrollView, StatusBar, Text, View, StyleSheet, Pressable, Alert, Image, Animated } from 'react-native';\r\nimport { Feather as Icon } from '@expo/vector-icons';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { useDispatch } from 'react-redux';\r\nimport api from '../../services/api';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { AxiosError } from 'axios';\r\nimport Loading from '../../components/Loading';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { showMessage } from 'react-native-flash-message';\r\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell, } from 'react-native-confirmation-code-field';\r\n\r\nconst FillCode = (route) => {\r\n    const option = route?.route?.params?.option;\r\n    const [textVisible, setTextVisible] = useState(true);\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const email = route?.route?.params?.email;\r\n\r\n    const { Value, Text: AnimatedText } = Animated;\r\n    const CELL_COUNT = 4;\r\n\r\n    const [value, setValue] = useState('');\r\n    const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\r\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({ value, setValue, });\r\n\r\n    function sendEmail() {\r\n        setTextVisible(false);\r\n        setShowLoading(true);\r\n\r\n        if (option == 'passwordReset') {\r\n            trackPromise(\r\n                api.post(`/verifyCode`, { email: email, token: value }).then(response => {\r\n                    setTextVisible(true);\r\n                    setShowLoading(false);\r\n                    navigation.navigate('ResetPassword', { email: email });\r\n                }).catch((err: AxiosError) => {\r\n                    showMessage({\r\n                        message: err.response.data.message,\r\n                        type: \"danger\",\r\n                    });\r\n                    setTextVisible(true);\r\n                    setShowLoading(false);\r\n                }));\r\n        } else {\r\n            trackPromise(\r\n                api.post(`/confirmAccount`, { email: email, token: value }).then(response => {\r\n                    setTextVisible(true);\r\n                    setShowLoading(false);\r\n                    showMessage({\r\n                        message: `Conta confirmada com sucesso, realize login para continuar!`,\r\n                        type: \"success\",\r\n                    });\r\n                    navigation.navigate('Login');\r\n                }).catch((err: AxiosError) => {\r\n                    showMessage({\r\n                        message: err.response.data.message,\r\n                        type: \"danger\",\r\n                    });\r\n                    setTextVisible(true);\r\n                    setShowLoading(false);\r\n                }));\r\n        }\r\n    }\r\n\r\n    const animationsColor = [...new Array(CELL_COUNT)].map(() => new Value(0));\r\n    const animationsScale = [...new Array(CELL_COUNT)].map(() => new Value(1));\r\n    const animateCell = ({ hasValue, index, isFocused }) => {\r\n        Animated.parallel([\r\n            Animated.timing(animationsColor[index], {\r\n                useNativeDriver: false,\r\n                toValue: isFocused ? 1 : 0,\r\n                duration: 250\r\n            }),\r\n            Animated.spring(animationsScale[index], {\r\n                useNativeDriver: false,\r\n                toValue: hasValue ? 0 : 1\r\n                // duration: hasValue ? 300 : 250\r\n            }),\r\n        ]).start();\r\n    };\r\n\r\n    const renderCell = ({ index, symbol, isFocused }) => {\r\n        const hasValue = Boolean(symbol);\r\n        const animatedCellStyle = {\r\n            backgroundColor: hasValue\r\n                ? animationsScale[index].interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [NOT_EMPTY_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR],\r\n                })\r\n                : animationsColor[index].interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [DEFAULT_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR],\r\n                }),\r\n            borderRadius: animationsScale[index].interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [CELL_SIZE, CELL_BORDER_RADIUS],\r\n            }),\r\n            transform: [\r\n                {\r\n                    scale: animationsScale[index].interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [0.2, 1],\r\n                    }),\r\n                },\r\n            ],\r\n        };\r\n\r\n        // Run animation on next event loop tik\r\n        // Because we need first return new style prop and then animate this value\r\n        // setTimeout(() => {\r\n        //     animateCell({ hasValue, index, isFocused });\r\n        // }, 0);\r\n\r\n        return (\r\n            <AnimatedText\r\n                key={index}\r\n                style={[styles.cell, animatedCellStyle]}\r\n                onLayout={getCellOnLayoutHandler(index)}>\r\n                {symbol || (isFocused ? <Cursor /> : null)}\r\n            </AnimatedText>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.container}>\r\n                <View style={styles.header}>\r\n                    <Icon name=\"arrow-left\" color=\"#FFF\" size={24} onPress={() => navigation.goBack()} />\r\n                    <Text style={styles.title}>Gamebook</Text>\r\n                </View>\r\n\r\n                <View style={styles.resetContainer}>\r\n\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={styles.textTitle}>{option == 'passwordReset' ? 'Esqueci minha senha' : 'Confirmar c√≥digo'}</Text>\r\n                        <Text style={styles.textDescription}>Insira o c√≥digo enviado para {email}.</Text>\r\n                    </View>\r\n\r\n                    <CodeField\r\n                        ref={ref}\r\n                        {...props}\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        cellCount={CELL_COUNT}\r\n                        rootStyle={styles.codeFiledRoot}\r\n                        keyboardType=\"number-pad\"\r\n                        textContentType=\"oneTimeCode\"\r\n                        renderCell={renderCell}\r\n                    />\r\n\r\n                    <Pressable\r\n                        onPress={sendEmail}\r\n                        style={styles.sendButton}\r\n                    >\r\n                        {showLoading && <Loading login={true} />}\r\n                        {textVisible && <Text style={styles.textStyle}>Continuar</Text>}\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FillCode;\r\n\r\nexport const CELL_SIZE = 55;\r\nexport const CELL_BORDER_RADIUS = 8;\r\nexport const DEFAULT_CELL_BG_COLOR = '#fff';\r\nexport const NOT_EMPTY_CELL_BG_COLOR = '#3557b7';\r\nexport const ACTIVE_CELL_BG_COLOR = '#f7fafe';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000',\r\n    },\r\n\r\n    header: {\r\n        zIndex: 0.5,\r\n        position: 'absolute',\r\n        flexDirection: 'row',\r\n        top: 45,\r\n        left: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '85%',\r\n        marginLeft: 0\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontSize: 20,\r\n        left: 10,\r\n        width: \"80%\"\r\n    },\r\n\r\n    resetContainer: {\r\n        top: 200\r\n    },\r\n\r\n    emailInput: {\r\n        left: 40,\r\n        top: 100,\r\n        // padding: 20,\r\n        borderRadius: 8,\r\n        width: \"80%\",\r\n        height: 50,\r\n        // textAlign: \"left\",\r\n        color: \"#cecece\",\r\n        backgroundColor: \"#fff\",\r\n        fontSize: 16,\r\n        paddingLeft: 10\r\n    },\r\n\r\n    textContainer: {\r\n        width: \"90%\",\r\n        left: 25\r\n    },\r\n\r\n    textTitle: {\r\n        textAlign: \"justify\",\r\n        color: \"#fff\",\r\n        fontSize: 22,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    textDescription: {\r\n        textAlign: \"justify\",\r\n        color: \"#A9A9A9\",\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    sendButton: {\r\n        borderRadius: 8,\r\n        width: 190,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // left: 90,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        padding: 15,\r\n        elevation: 2,\r\n        backgroundColor: \"#fff\",\r\n        top: 150,\r\n        height: 30\r\n    },\r\n\r\n    textStyle: {\r\n        color: \"#000\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        fontSize: 16\r\n    },\r\n\r\n    codeFiledRoot: {\r\n        height: CELL_SIZE,\r\n        marginTop: 30,\r\n        paddingHorizontal: 20,\r\n        justifyContent: 'center',\r\n    },\r\n    cell: {\r\n        marginHorizontal: 8,\r\n        height: CELL_SIZE,\r\n        width: CELL_SIZE,\r\n        lineHeight: CELL_SIZE - 5,\r\n        fontSize: 30,\r\n        textAlign: 'center',\r\n        borderRadius: CELL_BORDER_RADIUS,\r\n        color: '#C71414',\r\n        backgroundColor: '#fff',\r\n\r\n        // IOS\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n\r\n        // Android\r\n        elevation: 3,\r\n    },\r\n\r\n    // =======================\r\n\r\n    root: {\r\n        minHeight: 800,\r\n        padding: 20,\r\n    },\r\n\r\n    // title: {\r\n    //     paddingTop: 50,\r\n    //     color: '#000',\r\n    //     fontSize: 25,\r\n    //     fontWeight: '700',\r\n    //     textAlign: 'center',\r\n    //     paddingBottom: 40,\r\n    // },\r\n    icon: {\r\n        width: 217 / 2.4,\r\n        height: 158 / 2.4,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    subTitle: {\r\n        paddingTop: 30,\r\n        color: '#000',\r\n        textAlign: 'center',\r\n    },\r\n    nextButton: {\r\n        marginTop: 30,\r\n        borderRadius: 60,\r\n        height: 60,\r\n        backgroundColor: '#3557b7',\r\n        justifyContent: 'center',\r\n        minWidth: 300,\r\n        marginBottom: 100,\r\n    },\r\n    nextButtonText: {\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        color: '#fff',\r\n        fontWeight: '700',\r\n    },\r\n\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}