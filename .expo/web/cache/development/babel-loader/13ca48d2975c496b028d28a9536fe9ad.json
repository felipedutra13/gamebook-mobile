{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Documents\\\\CCP\\\\Projects\\\\TracknPlay\\\\mobile\\\\src\\\\components\\\\GameplayOptions\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOption, selectPlaylistOption, showPlatformSelection } from \"../../actions\";\nimport api from \"../../services/api\";\nimport PlatformsList from \"../PlatformsList\";\nimport * as SecureStore from 'expo-secure-store';\nimport { showMessage } from 'react-native-flash-message';\n\nvar GameplayOptions = function GameplayOptions(props) {\n  var _game$igdbData;\n\n  var isPlaylistPage = props.page == 'playlist';\n  var game = props.game;\n  var selectedOption = isPlaylistPage ? useSelector(function (state) {\n    return state.playlistState;\n  }) : useSelector(function (state) {\n    return state.optionState;\n  });\n  var modalVisible = useSelector(function (state) {\n    return state.PlatformSelectionState;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      auxOption = _useState2[0],\n      setAuxOption = _useState2[1];\n\n  var dispatch = useDispatch();\n  var options = [{\n    'id': 1,\n    'option': 'wishlist',\n    'text': 'Lista de desejos',\n    'icon': 'gift'\n  }, {\n    'id': 2,\n    'option': 'backlog',\n    'text': 'Backlog',\n    'icon': 'info'\n  }, {\n    'id': 3,\n    'option': 'playing',\n    'text': 'Jogando',\n    'icon': 'play'\n  }, {\n    'id': 4,\n    'option': 'completed',\n    'text': 'Completados',\n    'icon': 'check-circle'\n  }];\n  useEffect(function () {\n    var mounted = true;\n\n    if (isPlaylistPage) {\n      return;\n    }\n\n    dispatch(selectOption(null));\n\n    if (game) {\n      if (mounted) {\n        getGameUser();\n      }\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  function getGameUser() {\n    var token;\n    return _regeneratorRuntime.async(function getGameUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = \"\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token').then(function (res) {\n              token = res;\n            }));\n\n          case 3:\n            api.get(\"/getGameUser\", {\n              params: {\n                game_id: game.igdbData.id\n              },\n              headers: {\n                'x-access-token': token\n              }\n            }).then(function (response) {\n              var option = null;\n\n              if (response.data && response.data.status_id) {\n                option = response.data.status_id;\n              }\n\n              dispatch(selectOption(option));\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function updateWishlistStatus(status) {\n    var token;\n    return _regeneratorRuntime.async(function updateWishlistStatus$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = \"\";\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token').then(function (res) {\n              token = res;\n            }));\n\n          case 3:\n            api.post(\"/updateGameStatus\", {\n              game_id: game.igdbData.id,\n              status_id: status\n            }, {\n              headers: {\n                'x-access-token': token\n              }\n            }).then(function (response) {});\n            dispatch(selectOption(status));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function removeGame() {\n    var token;\n    return _regeneratorRuntime.async(function removeGame$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = \"\";\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token').then(function (res) {\n              token = res;\n            }));\n\n          case 3:\n            api.post(\"/removeGame\", {\n              game_id: game.igdbData.id\n            }, {\n              headers: {\n                'x-access-token': token\n              }\n            }).catch(function (err) {\n              console.log(err.message);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleSelectedStatus(item) {\n    if (selectedOption == item) {\n      if (isPlaylistPage) {\n        dispatch(selectPlaylistOption(null));\n      } else {\n        dispatch(selectOption(null));\n        showMessage({\n          message: game.igdbData.title + \" removido da sua lista!\",\n          type: \"success\"\n        });\n        removeGame();\n      }\n    } else {\n      if (!isPlaylistPage && item !== 1) {\n        dispatch(showPlatformSelection(true));\n        setAuxOption(item);\n      } else if (isPlaylistPage) {\n        handlePlaylistPage(item);\n      } else {\n        updateWishlistStatus(item);\n        showMessage({\n          message: game.igdbData.title + \" adicionado a Lista de desejos!\",\n          type: \"success\"\n        });\n      }\n    }\n  }\n\n  function handlePlaylistPage(item) {\n    dispatch(selectPlaylistOption(item));\n  }\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return handleSelectedStatus(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: item.icon,\n      size: 25,\n      style: [selectedOption == item.id ? styles.icon : styles.unselectedIcon],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: [selectedOption == item.id ? styles.text : styles.unselectedText],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, item.text)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: options,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    numColumns: 4,\n    listKey: \"gamePlayOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      dispatch(showPlatformSelection(!modalVisible));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, \"Selecione a plataforma:\"), React.createElement(PlatformsList, {\n    platforms: game == null ? void 0 : (_game$igdbData = game.igdbData) == null ? void 0 : _game$igdbData.platforms,\n    game: game,\n    status: auxOption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.modalButton, styles.buttonClose],\n    onPress: function onPress() {\n      return dispatch(showPlatformSelection(!modalVisible));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"Fechar\"))))))));\n};\n\nexport default GameplayOptions;\nvar styles = StyleSheet.create({\n  options: {},\n  button: {\n    left: 5,\n    height: 60,\n    marginRight: 15,\n    flexDirection: \"row\",\n    borderRadius: 10,\n    borderWidth: 2,\n    alignItems: \"center\",\n    color: \"#00ff00\"\n  },\n  text: {\n    left: 5,\n    fontSize: 15,\n    color: \"#ffff00\"\n  },\n  unselectedText: {\n    left: 5,\n    fontSize: 15,\n    color: \"#fff\"\n  },\n  icon: {\n    color: \"#ffff00\"\n  },\n  unselectedIcon: {\n    color: \"#fff\"\n  },\n  modalText: {\n    color: \"white\",\n    fontSize: 16,\n    left: 4\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonView: {\n    alignItems: \"center\"\n  },\n  modalView: {\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"yellow\",\n    backgroundColor: \"#000\",\n    padding: 10,\n    width: 300,\n    height: 170\n  },\n  modalButton: {\n    width: 100,\n    top: 20,\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#fff\"\n  },\n  textStyle: {\n    color: \"#000\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Feather","Icon","useDispatch","useSelector","selectOption","selectPlaylistOption","showPlatformSelection","api","PlatformsList","SecureStore","showMessage","GameplayOptions","props","isPlaylistPage","page","game","selectedOption","state","playlistState","optionState","modalVisible","PlatformSelectionState","auxOption","setAuxOption","dispatch","options","mounted","getGameUser","token","getItemAsync","then","res","get","params","game_id","igdbData","id","headers","response","option","data","status_id","updateWishlistStatus","status","post","removeGame","catch","err","console","log","message","handleSelectedStatus","item","title","type","handlePlaylistPage","renderItem","styles","button","icon","unselectedIcon","text","unselectedText","String","centeredView","modalView","modalText","platforms","buttonView","modalButton","buttonClose","textStyle","StyleSheet","create","left","height","marginRight","flexDirection","borderRadius","borderWidth","alignItems","color","fontSize","flex","justifyContent","borderColor","backgroundColor","padding","width","top","elevation","buttonOpen","fontWeight","textAlign"],"sources":["C:/Users/Felipe/Documents/CCP/Projects/TracknPlay/mobile/src/components/GameplayOptions/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Feather as Icon } from '@expo/vector-icons';\r\nimport { Text, StyleSheet, View, TouchableOpacity, ScrollView, SafeAreaView, FlatList, TouchableWithoutFeedback, Modal, Pressable, Alert } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectOption, selectPlaylistOption, showPlatformSelection } from '../../actions';\r\nimport { RootState } from '../../reducers';\r\nimport { RectButton } from 'react-native-gesture-handler';\r\nimport api from '../../services/api';\r\nimport Option from '../../interfaces/Option';\r\nimport GameUser from '../../interfaces/GameUser';\r\nimport { GameDetail } from '../../interfaces/GameDetail';\r\nimport PlatformsList from '../PlatformsList';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { AxiosError } from 'axios';\r\nimport { showMessage } from 'react-native-flash-message';\r\n\r\n\r\nconst GameplayOptions = (props) => {\r\n    const isPlaylistPage = props.page == 'playlist';\r\n    const game: GameDetail = props.game;\r\n    const selectedOption = isPlaylistPage ? useSelector((state: RootState) => state.playlistState) : useSelector((state: RootState) => state.optionState);\r\n    const modalVisible = useSelector((state: RootState) => state.PlatformSelectionState);\r\n    const [auxOption, setAuxOption] = useState<number>();\r\n    const dispatch = useDispatch();\r\n\r\n    // const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    let options: Option[] = [\r\n        {\r\n            'id': 1,\r\n            'option': 'wishlist',\r\n            'text': 'Lista de desejos',\r\n            'icon': 'gift'\r\n        },\r\n        {\r\n            'id': 2,\r\n            'option': 'backlog',\r\n            'text': 'Backlog',\r\n            'icon': 'info'\r\n        },\r\n        {\r\n            'id': 3,\r\n            'option': 'playing',\r\n            'text': 'Jogando',\r\n            'icon': 'play'\r\n        },\r\n        {\r\n            'id': 4,\r\n            'option': 'completed',\r\n            'text': 'Completados',\r\n            'icon': 'check-circle'\r\n        }\r\n\r\n    ];\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (isPlaylistPage) {\r\n            return;\r\n        }\r\n        dispatch(selectOption(null));\r\n\r\n        if (game) {\r\n            if (mounted) {\r\n                getGameUser();\r\n            }\r\n        }\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    async function getGameUser() {\r\n        let token = \"\";\r\n        await SecureStore.getItemAsync('token').then(res => {\r\n            token = res;\r\n        });\r\n        api.get<GameUser>(`/getGameUser`,\r\n            {\r\n                params: {\r\n                    game_id: game.igdbData.id\r\n                },\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            }).then(response => {\r\n                let option = null;\r\n                if (response.data && response.data.status_id) {\r\n                    option = response.data.status_id;\r\n                }\r\n                dispatch(selectOption(option));\r\n            });\r\n    }\r\n\r\n    async function updateWishlistStatus(status: number) {\r\n        let token = \"\";\r\n        await SecureStore.getItemAsync('token').then(res => {\r\n            token = res;\r\n        });\r\n        api.post(`/updateGameStatus`, {\r\n            game_id: game.igdbData.id,\r\n            status_id: status\r\n        },\r\n            {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            }).then(response => {\r\n            });\r\n\r\n        dispatch(selectOption(status));\r\n    }\r\n\r\n    async function removeGame() {\r\n        let token = \"\";\r\n        await SecureStore.getItemAsync('token').then(res => {\r\n            token = res;\r\n        });\r\n        api.post(`/removeGame`, {\r\n            game_id: game.igdbData.id\r\n        },\r\n            {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            }\r\n        ).catch((err: AxiosError) => {\r\n            console.log(err.message);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function handleSelectedStatus(item: number) {\r\n        if (selectedOption == item) {\r\n            if (isPlaylistPage) {\r\n                dispatch(selectPlaylistOption(null));\r\n            } else {\r\n                dispatch(selectOption(null));\r\n                showMessage({\r\n                    message: `${game.igdbData.title} removido da sua lista!`,\r\n                    type: \"success\",\r\n                });\r\n                removeGame();\r\n            }\r\n\r\n        } else {\r\n            if (!isPlaylistPage && item !== 1) {\r\n                dispatch(showPlatformSelection(true));\r\n                setAuxOption(item);\r\n            } else if (isPlaylistPage) {\r\n                handlePlaylistPage(item);\r\n            } else {\r\n                updateWishlistStatus(item);\r\n                showMessage({\r\n                    message: `${game.igdbData.title} adicionado a Lista de desejos!`,\r\n                    type: \"success\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlePlaylistPage(item: number) {\r\n        dispatch(selectPlaylistOption(item));\r\n    }\r\n\r\n    const renderItem = ({ item }) => {\r\n        return (\r\n            <TouchableWithoutFeedback onPress={() => handleSelectedStatus(item.id)}>\r\n                <View style={styles.button}>\r\n                    <Icon name={item.icon} size={25} style={[selectedOption == item.id ? styles.icon : styles.unselectedIcon]} />\r\n                    <Text style={[selectedOption == item.id ? styles.text : styles.unselectedText]}>{item.text}</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.options}>\r\n                <ScrollView\r\n                    horizontal\r\n                    showsHorizontalScrollIndicator={true}\r\n                >\r\n                    <FlatList\r\n                        data={options}\r\n                        renderItem={renderItem}\r\n                        keyExtractor={(item) => String(item.id)}\r\n                        numColumns={4}\r\n                        listKey=\"gamePlayOptions\"\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n\r\n            <View>\r\n                <Modal\r\n                    animationType=\"fade\"\r\n                    transparent={true}\r\n                    visible={modalVisible}\r\n                    onRequestClose={() => {\r\n                        // setModalVisible(!modalVisible);\r\n                        dispatch(showPlatformSelection(!modalVisible));\r\n                    }}\r\n                >\r\n                    <View style={styles.centeredView}>\r\n                        <View style={styles.modalView}>\r\n                            <Text style={styles.modalText}>Selecione a plataforma:</Text>\r\n                            <PlatformsList platforms={game?.igdbData?.platforms} game={game} status={auxOption} />\r\n                            <View style={styles.buttonView}>\r\n                                <Pressable\r\n                                    style={[styles.modalButton, styles.buttonClose]}\r\n                                    onPress={() => dispatch(showPlatformSelection(!modalVisible))}\r\n                                >\r\n                                    <Text style={styles.textStyle}>Fechar</Text>\r\n                                </Pressable>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GameplayOptions;\r\n\r\nconst styles = StyleSheet.create({\r\n    options: {\r\n        // left: \r\n        // flexDirection: \"row\",\r\n        // justifyContent: \"center\"\r\n    },\r\n\r\n    button: {\r\n        left: 5,\r\n        height: 60,\r\n        // width: 100,\r\n        marginRight: 15,\r\n        flexDirection: \"row\",\r\n        borderRadius: 10,\r\n        // borderColor: \"red\",\r\n        borderWidth: 2,\r\n        alignItems: \"center\",\r\n        // justifyContent: \"center\",\r\n        color: \"#00ff00\",\r\n    },\r\n\r\n    text: {\r\n        left: 5,\r\n        fontSize: 15,\r\n        color: \"#ffff00\"\r\n    },\r\n\r\n    unselectedText: {\r\n        left: 5,\r\n        fontSize: 15,\r\n        color: \"#fff\"\r\n    },\r\n\r\n    icon: {\r\n        color: \"#ffff00\"\r\n    },\r\n\r\n    unselectedIcon: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    modalText: {\r\n        color: \"white\",\r\n        fontSize: 16,\r\n        left: 4\r\n    },\r\n\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        // marginTop: 55\r\n    },\r\n\r\n    buttonView: {\r\n        alignItems: \"center\"\r\n    },\r\n    modalView: {\r\n        borderRadius: 10,\r\n        borderWidth: 2,\r\n        borderColor: \"yellow\",\r\n        backgroundColor: \"#000\",\r\n        padding: 10,\r\n        width: 300,\r\n        // alignItems: \"center\",\r\n        height: 170\r\n    },\r\n\r\n    modalButton: {\r\n        width: 100,\r\n        top: 20,\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2\r\n    },\r\n    buttonOpen: {\r\n        backgroundColor: \"#F194FF\",\r\n    },\r\n    buttonClose: {\r\n        backgroundColor: \"#fff\",\r\n    },\r\n\r\n    textStyle: {\r\n        color: \"#000\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}